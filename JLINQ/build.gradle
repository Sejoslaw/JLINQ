apply plugin: 'java'
apply plugin: 'java-library'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

version = "0.5.0"
group = "jlinq.JLinq"
archivesBaseName = "JLINQ"

task copyFilesForCompilation(type: Copy) {
	from "src/main/java"
	into "$buildDir/generated-src/main/java"
}

task generateSources(type: Copy, dependsOn: 'copyFilesForCompilation') {
	println '[JLINQ] New file version = ' + version
	println '[JLINQ] Replacing file version...'

	from "src/main/java/jlinq"
	into "$buildDir/generated-src/main/java/jlinq"
	filter { line -> line.replaceAll('@VERSION@', version) }
}

compileJava.source "$buildDir/generated-src"
compileJava.dependsOn generateSources

sourceSets {
	main.java.srcDirs = ['$buildDir/generated-src/main/java']
}

task sourcesJar(type: Jar) {
    from sourceSets.main.output
    from "$buildDir/generated-src/main/java"
    classifier = ''
}

artifacts {
    archives sourcesJar
}